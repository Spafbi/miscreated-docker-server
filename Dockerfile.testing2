# Dockerfile to run a Miscreated server using Wine on Ubuntu
# Use the latest Ubuntu Server 22.04 as the base image
FROM ubuntu:jammy
ENV CODENAME=jammy

# Set build arguments with default values
ARG UID=1001
ARG GID=1001

# Set environment variables
ENV LD_LIBRARY_PATH="/app"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV DISPLAY=:0

# Install necessary packages
RUN dpkg --add-architecture i386 && \
    apt-get update && \
    apt-get install -y \
    cabextract \
    curl \
    lib32gcc-s1 \
    lib32stdc++6 \
    p7zip-full \
    playonlinux \
    software-properties-common \
    sudo \
    unzip \
    wget \
    winbind \
    wine \
    wine32 \
    wine64 \
    x11vnc \
    xrdp \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

# Create steam user and group
RUN groupadd -g $GID steam && \
    useradd -m -u $UID -g $GID steam

# Set up directories and permissions
RUN mkdir -p /app && chown -R steam:steam /app && chmod -R 775 /app

# Allow the steam user to start the xrdp service without a password
RUN mkdir -p /etc/sudoers.d && \
    echo "steam ALL=(ALL) NOPASSWD: /etc/init.d/xrdp start" | sudo tee /etc/sudoers.d/steam

# Switch to steam user
USER steam

# This section is for configuring Wine overrides.
# Wine overrides are necessary to ensure that specific Windows DLLs or libraries are used instead of the default ones provided by Wine.
# This can help improve compatibility and stability for certain applications running in the Wine environment.
# By specifying overrides, we can address issues related to application behavior, performance, or graphical rendering.
# Wine Overrides
ENV WINEDLLOVERRIDES="mscoree,mshtml="
ENV WINEARCH=win64
ENV WINEPREFIX=/home/steam/.wine64

# Initialize the Wine environment and update it by running wineboot with the -u option
# xvfb-run is used to run wineboot in a virtual X server environment, which is useful for applications that require a graphical interface
RUN xvfb-run wineboot -u

# Install SteamCMD
RUN mkdir -p /home/steam/steamcmd && \
    cd /home/steam/steamcmd && \
    wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz && \
    tar -xvzf steamcmd_linux.tar.gz && \
    rm steamcmd_linux.tar.gz

# Install the game server
RUN /home/steam/steamcmd/steamcmd.sh +@sSteamCmdForcePlatformType windows +login anonymous +force_install_dir /app +app_update 302200 validate +quit

# This Dockerfile exposes the necessary ports for the server to function correctly.
# Typically, game servers require multiple ports for different types of communication.
# For example:
# - Port 3389/TCP: Console access using a remote desktop connection (RDP) client.
# - Port 64090/UDP: Game server port for client connections.
# - Port 64091/UDP: Game server port for Steam query
# - Port 64092/UDP: Game server port for server info.
# - Port 64093/UDP: Game server port for VoIP.
# - Port 64094/TCP: Game server port for RCON.
# Ensure that these ports are correctly mapped in your Docker run command or Docker Compose file.
EXPOSE 3389/tcp 64090/udp 64091/udp 64092/udp 64093/udp 64094/tcp

# Set the working directory to the server directory /app
WORKDIR /app

# Copy the entrypoint script into the container
USER root
COPY image-scripts/start_server_testing2.sh /home/steam/start_server.sh
RUN chmod +x /home/steam/start_server.sh

# Create the /tmp/.X11-unix directory and set permissions
RUN mkdir -p /tmp/.X11-unix && \
    chown root:root /tmp/.X11-unix && \
    chmod 1777 /tmp/.X11-unix

# Create /etc/xrdp/xrdp.ini file with the required entries
RUN mkdir -p /etc/xrdp && \
    echo "[Globals]" > /etc/xrdp/xrdp.ini && \
    echo "address=0.0.0.0" >> /etc/xrdp/xrdp.ini && \
    echo "port=3389" >> /etc/xrdp/xrdp.ini && \
    echo "[xrdp1]" >> /etc/xrdp/xrdp.ini && \
    echo "name=Session1" >> /etc/xrdp/xrdp.ini && \
    echo "lib=libvnc.so" >> /etc/xrdp/xrdp.ini && \
    echo "username=ask" >> /etc/xrdp/xrdp.ini && \
    echo "password=ask" >> /etc/xrdp/xrdp.ini && \
    echo "ip=127.0.0.1" >> /etc/xrdp/xrdp.ini && \
    echo "port=-1" >> /etc/xrdp/xrdp.ini && \
    chown steam:steam -r /etc/xrdp && \
    chmod 775 /etc/xrdp/xrdp.ini && \
    chmod 664 /etc/xrdp/xrdp.ini

USER steam

# Set the entrypoint
ENTRYPOINT ["/home/steam/start_server.sh"]